{"version":3,"sources":["Photo.js","app.js"],"names":["Photo","obj","_this","this","_classCallCheck","glass","document","querySelector","block_parent","polygon_rand","living_figure","arr_polygon","style","clipPath","Math","floor","random","length","setInterval","a","c","x","y","z","b","e","bounds","target","getBoundingClientRect","clientX","left","clientY","top","classList","contains","add","backgroundPositionX","backgroundPositionY","window","addEventListener","bg1","getElementById","bg1__wrap","wrap_anim_el_left","querySelectorAll","startAnimate","el_container","setTimeout","img_parent_width","naturalWidth","clientWidth","wrap_anim_el_right","naturalHeight","clientHeight","img_parent_height","item","backgroundSize","concat","rect","res","screen_width","innerWidth","startAnimateText","i","idInterval","header","strokeDasharray","clearInterval","backAnimateText"],"mappings":"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","file":"app.min.js","sourcesContent":["class Photo { /* Анимация, - \"Цветной зум\" */\r\n    constructor(obj) {\r\n        this.glass = document.querySelector(obj.glass);\r\n        this.block_parent = document.querySelector(obj.block_parent);\r\n\r\n        this.polygon_rand = obj.polygon_rand;\r\n        this.living_figure = obj.living_figure;\r\n\r\n/*        this.block_parent.addEventListener('mousemove', this.relativeCoords.bind(this));\r\n        this.block_parent.addEventListener('mouseleave', () => (this.glass.classList.contains('opacityShow')) ? this.glass.classList.remove('opacityShow') : '');\r\n        this.block_parent.addEventListener('mouseout', () => (this.glass.classList.contains('opacityShow')) ? this.glass.classList.remove('opacityShow') : '');*/\r\n\r\n        this.arr_polygon = [\r\n            '0% 15%, 22% 23%, 15% 0%, 85% 0%, 77% 23%, 100% 15%, 100% 85%, 75% 76%, 85% 100%, 15% 100%, 23% 77%, 0% 85%',\r\n            '98% 19%, 86% 33%, 98% 61%, 80% 69%, 96% 82%, 80% 99%, 38% 88%, 20% 94%, 0 86%, 15% 74%, 0 66%, 9% 46%, 0 30%, 18% 13%, 10% 4%, 30% 2%, 50% 8%, 62% 1%, 84% 4%)',\r\n            '50% 0%, 69% 23%, 98% 35%, 75% 61%, 79% 91%, 48% 78%, 21% 91%, 20% 60%, 2% 35%, 28% 25%',\r\n            '24% 14%, 74% 14%, 100% 50%, 74% 88%, 26% 88%, 0% 50%',\r\n            '50% 0%, 100% 50%, 50% 100%, 0% 50%',\r\n            '20% 0%, 0% 20%, 15% 49%, 0% 80%, 20% 100%, 48% 91%, 80% 100%, 100% 80%, 83% 50%, 100% 20%, 80% 0%, 49% 13%',\r\n            '50% 0%, 80% 10%, 100% 35%, 100% 70%, 80% 90%, 50% 100%, 20% 90%, 0% 70%, 0% 35%, 20% 10%'\r\n        ];\r\n\r\n        if(this.polygon_rand) {\r\n            this.glass.style.clipPath = `polygon(${this.arr_polygon[Math.floor(Math.random() * (this.arr_polygon.length + 1))]})`;\r\n        }\r\n\r\n        if (this.living_figure) {\r\n            setInterval(() => {\r\n                let a = Math.floor(Math.random() * 10)\r\n                let b = Math.floor(Math.random() * 10)\r\n                let c = Math.floor(Math.random() * 10)\r\n                let x = Math.floor(Math.random() * 10)\r\n                let y = Math.floor(Math.random() * 10)\r\n                let z = Math.floor(Math.random() * 10)\r\n                this.glass.style.clipPath = `polygon(9${x}% 1${z}%, 8${y}% 3${x}%, 9${z}% 6${y}%, 8${z}% 6${x}%, 9${a}% 8${b}%, 8${x}% 9${z}%, 3${y}% 8${x}%, 2${b}% 9${z}%, 0 8${y}%, 1${a}% 7${z}%, ${b}% 6${x}%, 9% 4${y}%, ${c}% 3${a}%, 1${x}% 1${z}%, 1${y}% ${c}%, 3${x}% ${a}%, 5${z}% ${y}%, 6${z}% ${x}%, 8${z}% ${x}%)`;\r\n            }, 500)\r\n        }\r\n    }\r\n\r\n    relativeCoords(e) {\r\n        let bounds = e.target.getBoundingClientRect();\r\n        let x = (e.clientX - 100) - bounds.left;\r\n        let y = (e.clientY - 100) - bounds.top;\r\n        (!this.glass.classList.contains('opacityShow')) ? this.glass.classList.add('opacityShow') : '';\r\n        this.glass.style.left = x + 'px';\r\n        this.glass.style.top = y + 'px';\r\n        this.glass.style.backgroundPositionX = -x + 'px';\r\n        this.glass.style.backgroundPositionY = -y + 'px';\r\n    }\r\n}","window.addEventListener('load', () => {\r\n\r\n    /* Анимация боковых фигур */\r\n    let bg1 = document.getElementById('bg1');\r\n    let bg1__wrap = document.querySelector('.bg1__wrap');\r\n    let wrap_anim_el_left = document.querySelectorAll('.wrap_anim_el_left div');\r\n    let wrap_anim_el_right = document.querySelectorAll('.wrap_anim_el_right div');\r\n    setTimeout(() => startAnimate(wrap_anim_el_left), 5000);\r\n    setTimeout(() => startAnimate(wrap_anim_el_right), 8000);\r\n\r\n    function startAnimate(el_container) {\r\n        let img_parent_width = bg1.naturalWidth - (bg1.naturalWidth - bg1.clientWidth);\r\n        let img_parent_height = bg1.naturalHeight - (bg1.naturalHeight - bg1.clientHeight);\r\n        /*console.log(bg1.naturalWidth);\r\n        console.log(bg1.clientWidth);\r\n        console.log(window.getComputedStyle(bg1).left);\r\n        console.log(window.getComputedStyle(bg1).width);*/\r\n        el_container.forEach(item => {\r\n            item.style.backgroundSize = `${img_parent_width}px ${img_parent_height}px`;\r\n            let rect = item.getBoundingClientRect();\r\n            item.style.backgroundPositionX = '-' + rect.left + 'px';\r\n            item.style.backgroundPositionY = '-' + rect.top + 'px';\r\n        });\r\n    }\r\n\r\n    // Меня бэк на фигурах по ресайзу\r\n    let screen_width = window.innerWidth\r\n    window.addEventListener('resize', (e) => {\r\n        let res = screen_width - e.target.innerWidth\r\n        if (res > 100) {\r\n            setTimeout(() => startAnimate(wrap_anim_el_left), 500);\r\n            setTimeout(() => startAnimate(wrap_anim_el_right), 500);\r\n        }\r\n        if (res < -100) {\r\n            setTimeout(() => startAnimate(wrap_anim_el_left), 1000);\r\n            setTimeout(() => startAnimate(wrap_anim_el_right), 1000);\r\n        }\r\n    })\r\n\r\n    /* Анимация текста */\r\n    let header = document.querySelector('#header path');\r\n    startAnimateText()\r\n    function startAnimateText() {\r\n        let i = 0\r\n        let idInterval = setInterval(() => {\r\n            if (i < 870) {\r\n                i += 3;\r\n                header.style.strokeDasharray = `${i}px`;\r\n            } else {\r\n                header.style.strokeDasharray = `870px`;\r\n                clearInterval(idInterval);\r\n                backAnimateText()\r\n            }\r\n        }, 50)\r\n    }\r\n\r\n    //console.log(header.getTotalLength()); // 10256.8759765625 Длина всей записи\r\n    // 810px stroke-dasharray заполнение\r\n    // stroke-dashoffset просто бегают туда сюда\r\n\r\n    function backAnimateText() {\r\n        let i = 870\r\n        let idInterval = setInterval(() => {\r\n            if (i > 100) {\r\n                i -= 3;\r\n                header.style.strokeDasharray = `${i}px`;\r\n            } else {\r\n                header.style.strokeDasharray = `100px`;\r\n                clearInterval(idInterval);\r\n                startAnimateText();\r\n            }\r\n        }, 50);\r\n    }\r\n});"]}